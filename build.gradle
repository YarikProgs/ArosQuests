plugins {
	id 'dev.architectury.loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_name
}

repositories {
	// Add NeoForged repository.
	maven {
		name = 'NeoForged'
		url = 'https://maven.neoforged.net/releases'
	}
}

dependencies {
	minecraft "net.minecraft:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		it.mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
		it.mappings("dev.architectury:yarn-mappings-patch-neoforge:${project.yarn_mappings_patch_version}")
	}
	neoForge "net.neoforged:neoforge:${project.neoforge_version}"
}

processResources {
	inputs.property 'version', project.version

	filesMatching('META-INF/neoforge.mods.toml') {
		expand version: project.version
	}
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release.set(targetJavaVersion)
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			artifactId = project.archives_name + "-" + project.mod_loader
			version = project.mod_version

			artifact jar
			artifact remapJar
			artifact sourcesJar
		}
	}
	repositories {
		maven {
			name = "Local"
			url = file("build/repo").toURI()
		}
	}
}